# Generated by Django 4.2.7 on 2025-10-06 20:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("po_number", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "tax_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("order_date", models.DateField()),
                (
                    "required_date",
                    models.DateField(
                        blank=True, help_text="Required delivery date", null=True
                    ),
                ),
                ("sent_date", models.DateTimeField(blank=True, null=True)),
                ("acknowledged_date", models.DateTimeField(blank=True, null=True)),
                ("received_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("acknowledged", "Acknowledged"),
                            ("partially_received", "Partially Received"),
                            ("received", "Received"),
                            ("invoiced", "Invoiced"),
                            ("paid", "Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "shipping_address",
                    models.JSONField(
                        default=dict, help_text="Shipping address details"
                    ),
                ),
                ("terms_conditions", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_purchase_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "purchase_order",
                "ordering": ["-order_date"],
            },
        ),
        migrations.CreateModel(
            name="Vendor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("legal_name", models.CharField(blank=True, max_length=255)),
                (
                    "vendor_code",
                    models.CharField(
                        help_text="Unique vendor identifier",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("website", models.URLField(blank=True)),
                (
                    "vendor_type",
                    models.CharField(
                        choices=[
                            ("supplier", "Supplier"),
                            ("service_provider", "Service Provider"),
                            ("consultant", "Consultant"),
                            ("partner", "Partner"),
                            ("other", "Other"),
                        ],
                        default="supplier",
                        max_length=50,
                    ),
                ),
                ("industry", models.CharField(blank=True, max_length=100)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("primary_contact_name", models.CharField(blank=True, max_length=255)),
                (
                    "primary_contact_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("primary_contact_phone", models.CharField(blank=True, max_length=50)),
                ("primary_contact_title", models.CharField(blank=True, max_length=100)),
                ("tax_id", models.CharField(blank=True, max_length=100)),
                ("registration_number", models.CharField(blank=True, max_length=100)),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("employee_count", models.IntegerField(blank=True, null=True)),
                ("established_year", models.IntegerField(blank=True, null=True)),
                ("billing_address_line1", models.CharField(blank=True, max_length=255)),
                ("billing_address_line2", models.CharField(blank=True, max_length=255)),
                ("billing_city", models.CharField(blank=True, max_length=100)),
                ("billing_state", models.CharField(blank=True, max_length=100)),
                ("billing_postal_code", models.CharField(blank=True, max_length=20)),
                ("billing_country", models.CharField(blank=True, max_length=100)),
                (
                    "shipping_address_line1",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "shipping_address_line2",
                    models.CharField(blank=True, max_length=255),
                ),
                ("shipping_city", models.CharField(blank=True, max_length=100)),
                ("shipping_state", models.CharField(blank=True, max_length=100)),
                ("shipping_postal_code", models.CharField(blank=True, max_length=20)),
                ("shipping_country", models.CharField(blank=True, max_length=100)),
                (
                    "payment_terms",
                    models.CharField(
                        default="Net 30",
                        help_text="Payment terms with this vendor",
                        max_length=100,
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("blacklisted", "Blacklisted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_approved", models.BooleanField(default=False)),
                ("is_preferred", models.BooleanField(default=False)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Vendor rating (1-5)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "performance_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Performance score (0-100)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("custom_fields", models.JSONField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="Vendor manager/owner",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_vendors",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "vendor",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VendorContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("title", models.CharField(blank=True, max_length=100)),
                ("department", models.CharField(blank=True, max_length=100)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=50)),
                ("mobile", models.CharField(blank=True, max_length=50)),
                ("fax", models.CharField(blank=True, max_length=50)),
                ("is_primary", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="vendors.vendor",
                    ),
                ),
            ],
            options={
                "db_table": "vendor_contact",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product_name",
                    models.CharField(help_text="Product/service name", max_length=255),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "sku",
                    models.CharField(
                        blank=True, help_text="Vendor SKU", max_length=100
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "received_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Quantity received",
                        max_digits=10,
                    ),
                ),
                (
                    "pending_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Quantity pending",
                        max_digits=10,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="vendors.purchaseorder",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_order_item",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="vendor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="vendors.vendor",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="vendor_contact",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="purchase_orders",
                to="vendors.vendorcontact",
            ),
        ),
        migrations.CreateModel(
            name="VendorPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                (
                    "delivery_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Delivery performance score (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Quality performance score (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "communication_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Communication score (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "overall_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Overall performance score (0-100)",
                        max_digits=5,
                    ),
                ),
                (
                    "on_time_delivery_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="On-time delivery rate percentage",
                        max_digits=5,
                    ),
                ),
                ("quality_issues_count", models.IntegerField(default=0)),
                ("communication_issues_count", models.IntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_records",
                        to="vendors.vendor",
                    ),
                ),
            ],
            options={
                "db_table": "vendor_performance",
                "ordering": ["-period_end"],
                "unique_together": {("vendor", "period_start", "period_end")},
            },
        ),
        migrations.AddIndex(
            model_name="vendor",
            index=models.Index(
                fields=["company", "name"], name="vendor_company_5186aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vendor",
            index=models.Index(
                fields=["company", "vendor_type"], name="vendor_company_9d5c69_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vendor",
            index=models.Index(
                fields=["company", "status"], name="vendor_company_5f0db7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vendor",
            index=models.Index(
                fields=["company", "owner"], name="vendor_company_5814c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["company", "po_number"], name="purchase_or_company_a7387c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["company", "vendor"], name="purchase_or_company_944b7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["company", "status"], name="purchase_or_company_78e11d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["company", "owner"], name="purchase_or_company_1cab4d_idx"
            ),
        ),
    ]
