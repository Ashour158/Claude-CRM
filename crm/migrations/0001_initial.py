# Generated by Django 4.2.7 on 2025-10-06 20:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("territories", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("legal_name", models.CharField(blank=True, max_length=255)),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="Unique account identifier",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                ("website", models.URLField(blank=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("customer", "Customer"),
                            ("prospect", "Prospect"),
                            ("partner", "Partner"),
                            ("competitor", "Competitor"),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    "industry",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Annual revenue in company currency",
                        max_digits=15,
                        null=True,
                    ),
                ),
                ("employee_count", models.IntegerField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("billing_address_line1", models.CharField(blank=True, max_length=255)),
                ("billing_address_line2", models.CharField(blank=True, max_length=255)),
                ("billing_city", models.CharField(blank=True, max_length=100)),
                ("billing_state", models.CharField(blank=True, max_length=100)),
                ("billing_postal_code", models.CharField(blank=True, max_length=20)),
                ("billing_country", models.CharField(blank=True, max_length=100)),
                (
                    "shipping_address_line1",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "shipping_address_line2",
                    models.CharField(blank=True, max_length=255),
                ),
                ("shipping_city", models.CharField(blank=True, max_length=100)),
                ("shipping_state", models.CharField(blank=True, max_length=100)),
                ("shipping_postal_code", models.CharField(blank=True, max_length=20)),
                ("shipping_country", models.CharField(blank=True, max_length=100)),
                (
                    "payment_terms",
                    models.IntegerField(default=30, help_text="Payment terms in days"),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("tax_id", models.CharField(blank=True, max_length=100)),
                ("custom_fields", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("description", models.TextField(blank=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_account",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent account for hierarchy",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subsidiaries",
                        to="crm.account",
                    ),
                ),
                (
                    "territory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accounts",
                        to="territories.territory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
                "db_table": "crm_account",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(db_index=True, max_length=100)),
                ("last_name", models.CharField(db_index=True, max_length=100)),
                (
                    "full_name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Auto-generated full name",
                        max_length=255,
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, help_text="Job title", max_length=100),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=50)),
                ("mobile", models.CharField(blank=True, max_length=50)),
                ("fax", models.CharField(blank=True, max_length=50)),
                ("linkedin_url", models.URLField(blank=True)),
                ("twitter_handle", models.CharField(blank=True, max_length=100)),
                ("facebook_url", models.URLField(blank=True)),
                ("mailing_address_line1", models.CharField(blank=True, max_length=255)),
                ("mailing_address_line2", models.CharField(blank=True, max_length=255)),
                ("mailing_city", models.CharField(blank=True, max_length=100)),
                ("mailing_state", models.CharField(blank=True, max_length=100)),
                ("mailing_postal_code", models.CharField(blank=True, max_length=20)),
                ("mailing_country", models.CharField(blank=True, max_length=100)),
                ("other_address_line1", models.CharField(blank=True, max_length=255)),
                ("other_address_line2", models.CharField(blank=True, max_length=255)),
                ("other_city", models.CharField(blank=True, max_length=100)),
                ("other_state", models.CharField(blank=True, max_length=100)),
                ("other_postal_code", models.CharField(blank=True, max_length=20)),
                ("other_country", models.CharField(blank=True, max_length=100)),
                (
                    "email_opt_out",
                    models.BooleanField(
                        default=False,
                        help_text="Contact has opted out of email communications",
                    ),
                ),
                (
                    "do_not_call",
                    models.BooleanField(
                        default=False, help_text="Contact prefers not to be called"
                    ),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("mobile", "Mobile"),
                            ("meeting", "In-person Meeting"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("decision_maker", "Decision Maker"),
                            ("influencer", "Influencer"),
                            ("technical", "Technical Contact"),
                            ("administrative", "Administrative"),
                            ("billing", "Billing Contact"),
                            ("other", "Other"),
                        ],
                        help_text="Role of this contact in sales process",
                        max_length=50,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("assistant_name", models.CharField(blank=True, max_length=100)),
                ("assistant_phone", models.CharField(blank=True, max_length=50)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Notes about this contact"),
                ),
                ("custom_fields", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Primary contact for the account"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        help_text="Company/Account this contact belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts",
                        to="crm.account",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="Sales rep who owns this contact",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reports_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Manager/supervisor of this contact",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="direct_reports",
                        to="crm.contact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "db_table": "crm_contact",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("color", models.CharField(default="#007bff", max_length=7)),
                ("description", models.TextField(blank=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
            ],
            options={
                "db_table": "crm_tag",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Lead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_name",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "full_name",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                ("title", models.CharField(blank=True, max_length=100)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=50)),
                ("mobile", models.CharField(blank=True, max_length=50)),
                ("website", models.URLField(blank=True)),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("website", "Website"),
                            ("referral", "Referral"),
                            ("cold_call", "Cold Call"),
                            ("trade_show", "Trade Show"),
                            ("email_campaign", "Email Campaign"),
                            ("social_media", "Social Media"),
                            ("partner", "Partner"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("contacted", "Contacted"),
                            ("qualified", "Qualified"),
                            ("unqualified", "Unqualified"),
                            ("converted", "Converted"),
                        ],
                        db_index=True,
                        default="new",
                        max_length=50,
                    ),
                ),
                (
                    "rating",
                    models.CharField(
                        blank=True,
                        choices=[("hot", "Hot"), ("warm", "Warm"), ("cold", "Cold")],
                        db_index=True,
                        help_text="How hot is this lead?",
                        max_length=20,
                    ),
                ),
                (
                    "lead_score",
                    models.IntegerField(
                        default=0, help_text="Automated lead score (0-100)"
                    ),
                ),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("country", models.CharField(blank=True, max_length=100)),
                (
                    "industry",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("employee_count", models.IntegerField(blank=True, null=True)),
                ("converted_at", models.DateTimeField(blank=True, null=True)),
                ("campaign_name", models.CharField(blank=True, max_length=255)),
                ("utm_source", models.CharField(blank=True, max_length=100)),
                ("utm_medium", models.CharField(blank=True, max_length=100)),
                ("utm_campaign", models.CharField(blank=True, max_length=100)),
                (
                    "budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated budget",
                        max_digits=15,
                        null=True,
                    ),
                ),
                (
                    "timeline",
                    models.CharField(
                        blank=True, help_text="Purchase timeline", max_length=100
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("custom_fields", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "converted_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="converted_from_leads",
                        to="crm.account",
                    ),
                ),
                (
                    "converted_contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="converted_from_leads",
                        to="crm.contact",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="Sales rep who owns this lead",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_leads",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "territory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads",
                        to="territories.territory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lead",
                "verbose_name_plural": "Leads",
                "db_table": "crm_lead",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["company", "status"], name="crm_lead_company_b1e111_idx"
                    ),
                    models.Index(
                        fields=["company", "rating"], name="crm_lead_company_680cf0_idx"
                    ),
                    models.Index(
                        fields=["company", "source"], name="crm_lead_company_822dc2_idx"
                    ),
                    models.Index(
                        fields=["company", "owner"], name="crm_lead_company_386601_idx"
                    ),
                    models.Index(
                        fields=["company", "territory"],
                        name="crm_lead_company_1e6477_idx",
                    ),
                    models.Index(
                        fields=["company", "email"], name="crm_lead_company_a3ddd9_idx"
                    ),
                    models.Index(
                        fields=["company", "is_active"],
                        name="crm_lead_company_bbfcee_idx",
                    ),
                    models.Index(
                        fields=["company", "-created_at"],
                        name="crm_lead_company_c5f6f7_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["company", "last_name", "first_name"],
                name="crm_contact_company_8da3c0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["company", "account"], name="crm_contact_company_c48a56_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["company", "owner"], name="crm_contact_company_7eca8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["company", "email"], name="crm_contact_company_1361d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["company", "is_active"], name="crm_contact_company_49ead1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["company", "name"], name="crm_account_company_6d747a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["company", "type"], name="crm_account_company_aef84c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["company", "owner"], name="crm_account_company_27d930_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["company", "territory"], name="crm_account_company_964d69_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["company", "is_active"], name="crm_account_company_b3fb24_idx"
            ),
        ),
    ]
