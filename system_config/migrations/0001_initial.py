# Generated by Django 4.2.7 on 2025-10-06 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkflowRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("trigger", "Trigger"),
                            ("condition", "Condition"),
                            ("action", "Action"),
                        ],
                        default="trigger",
                        max_length=20,
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        help_text="Entity type this rule applies to", max_length=50
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("create", "Record Created"),
                            ("update", "Record Updated"),
                            ("delete", "Record Deleted"),
                            ("field_change", "Field Changed"),
                            ("status_change", "Status Changed"),
                            ("date_reached", "Date Reached"),
                            ("email_received", "Email Received"),
                            ("webhook", "Webhook"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(default=dict, help_text="Rule conditions"),
                ),
                ("actions", models.JSONField(default=list, help_text="Rule actions")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Apply to all companies"
                    ),
                ),
                ("execution_count", models.IntegerField(default=0)),
                ("last_executed", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_workflow_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "workflow_rule",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SystemSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("key", models.CharField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "setting_type",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("email", "Email"),
                            ("security", "Security"),
                            ("integration", "Integration"),
                            ("notification", "Notification"),
                            ("custom", "Custom"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("value", models.TextField(blank=True)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("boolean", "Boolean"),
                            ("json", "JSON"),
                            ("email", "Email"),
                            ("url", "URL"),
                        ],
                        default="string",
                        max_length=20,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                (
                    "validation_rules",
                    models.JSONField(
                        default=dict, help_text="Validation rules for the setting"
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("is_editable", models.BooleanField(default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
            ],
            options={
                "db_table": "system_setting",
                "ordering": ["setting_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255)),
                ("body", models.TextField()),
                ("html_body", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Available to all companies"
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        default=list, help_text="Available template variables"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_notification_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "notification_template",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Integration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "integration_type",
                    models.CharField(
                        choices=[
                            ("email", "Email Service"),
                            ("calendar", "Calendar"),
                            ("crm", "CRM"),
                            ("marketing", "Marketing"),
                            ("analytics", "Analytics"),
                            ("payment", "Payment"),
                            ("social", "Social Media"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "provider",
                    models.CharField(help_text="Integration provider", max_length=100),
                ),
                ("api_endpoint", models.URLField(blank=True)),
                ("api_key", models.CharField(blank=True, max_length=255)),
                ("api_secret", models.CharField(blank=True, max_length=255)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Integration configuration"
                    ),
                ),
                ("webhook_url", models.URLField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("pending", "Pending"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "sync_frequency",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_integrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "integration",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard_layout",
                    models.JSONField(
                        default=dict, help_text="Dashboard layout configuration"
                    ),
                ),
                (
                    "default_dashboard",
                    models.CharField(
                        blank=True, help_text="Default dashboard ID", max_length=100
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("auto", "Auto"),
                        ],
                        default="light",
                        max_length=20,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en",
                        help_text="User language preference",
                        max_length=10,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", help_text="User timezone", max_length=50
                    ),
                ),
                (
                    "date_format",
                    models.CharField(
                        default="MM/DD/YYYY",
                        help_text="Date format preference",
                        max_length=20,
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        choices=[("12", "12 Hour"), ("24", "24 Hour")],
                        default="12",
                        max_length=10,
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                (
                    "notification_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("never", "Never"),
                        ],
                        default="immediate",
                        max_length=20,
                    ),
                ),
                (
                    "custom_preferences",
                    models.JSONField(default=dict, help_text="Custom user preferences"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_preference",
                "unique_together": {("user", "company")},
            },
        ),
        migrations.CreateModel(
            name="CustomField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("label", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("textarea", "Textarea"),
                            ("number", "Number"),
                            ("decimal", "Decimal"),
                            ("date", "Date"),
                            ("datetime", "DateTime"),
                            ("boolean", "Boolean"),
                            ("choice", "Choice"),
                            ("multichoice", "Multi Choice"),
                            ("url", "URL"),
                            ("email", "Email"),
                            ("phone", "Phone"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        choices=[
                            ("account", "Account"),
                            ("contact", "Contact"),
                            ("lead", "Lead"),
                            ("deal", "Deal"),
                            ("product", "Product"),
                            ("campaign", "Campaign"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                ("is_unique", models.BooleanField(default=False)),
                ("default_value", models.TextField(blank=True)),
                (
                    "choices",
                    models.JSONField(
                        default=list, help_text="Choices for choice/multichoice fields"
                    ),
                ),
                (
                    "validation_rules",
                    models.JSONField(default=dict, help_text="Field validation rules"),
                ),
                ("display_order", models.IntegerField(default=0)),
                ("is_visible", models.BooleanField(default=True)),
                ("help_text", models.TextField(blank=True)),
                ("is_editable", models.BooleanField(default=True)),
                ("is_searchable", models.BooleanField(default=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
            ],
            options={
                "db_table": "custom_field",
                "ordering": ["entity_type", "display_order"],
                "unique_together": {("company", "name", "entity_type")},
            },
        ),
    ]
