# Generated by Django 4.2.7 on 2025-10-06 20:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APICredential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "service_name",
                    models.CharField(help_text="Service provider name", max_length=100),
                ),
                (
                    "credential_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key"),
                            ("oauth", "OAuth"),
                            ("basic_auth", "Basic Auth"),
                            ("bearer_token", "Bearer Token"),
                            ("custom", "Custom"),
                        ],
                        default="api_key",
                        max_length=20,
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=500)),
                ("api_secret", models.CharField(blank=True, max_length=500)),
                ("access_token", models.TextField(blank=True)),
                ("refresh_token", models.TextField(blank=True)),
                ("username", models.CharField(blank=True, max_length=255)),
                ("password", models.CharField(blank=True, max_length=255)),
                ("base_url", models.URLField(blank=True)),
                (
                    "endpoints",
                    models.JSONField(
                        default=dict, help_text="API endpoints configuration"
                    ),
                ),
                (
                    "headers",
                    models.JSONField(default=dict, help_text="Default headers"),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, help_text="Default parameters"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("last_verified", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("auto_refresh", models.BooleanField(default=False)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_api_credentials",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "api_credential",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataSync",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("import", "Import"),
                            ("export", "Export"),
                            ("bidirectional", "Bidirectional"),
                        ],
                        default="import",
                        max_length=20,
                    ),
                ),
                (
                    "source_system",
                    models.CharField(help_text="Source system name", max_length=100),
                ),
                (
                    "target_system",
                    models.CharField(help_text="Target system name", max_length=100),
                ),
                (
                    "entity_type",
                    models.CharField(help_text="Entity type to sync", max_length=100),
                ),
                (
                    "field_mapping",
                    models.JSONField(
                        default=dict, help_text="Field mapping between systems"
                    ),
                ),
                (
                    "sync_filters",
                    models.JSONField(default=dict, help_text="Filters for sync data"),
                ),
                ("is_scheduled", models.BooleanField(default=False)),
                (
                    "schedule_frequency",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("schedule_time", models.TimeField(blank=True, null=True)),
                ("next_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("total_records", models.IntegerField(default=0)),
                ("synced_records", models.IntegerField(default=0)),
                ("failed_records", models.IntegerField(default=0)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_data_syncs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_credentials",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="source_syncs",
                        to="integrations.apicredential",
                    ),
                ),
                (
                    "target_credentials",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="target_syncs",
                        to="integrations.apicredential",
                    ),
                ),
            ],
            options={
                "db_table": "data_sync",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Webhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "webhook_type",
                    models.CharField(
                        choices=[("incoming", "Incoming"), ("outgoing", "Outgoing")],
                        default="incoming",
                        max_length=20,
                    ),
                ),
                ("url", models.URLField(help_text="Webhook URL")),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                            ("DELETE", "DELETE"),
                        ],
                        default="POST",
                        max_length=10,
                    ),
                ),
                (
                    "headers",
                    models.JSONField(default=dict, help_text="Webhook headers"),
                ),
                (
                    "auth_type",
                    models.CharField(
                        choices=[
                            ("none", "None"),
                            ("basic", "Basic Auth"),
                            ("bearer", "Bearer Token"),
                            ("api_key", "API Key"),
                            ("custom", "Custom"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "auth_credentials",
                    models.JSONField(
                        default=dict, help_text="Authentication credentials"
                    ),
                ),
                (
                    "trigger_events",
                    models.JSONField(
                        default=list, help_text="Events that trigger this webhook"
                    ),
                ),
                (
                    "trigger_conditions",
                    models.JSONField(
                        default=dict, help_text="Conditions for triggering"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("total_calls", models.IntegerField(default=0)),
                ("successful_calls", models.IntegerField(default=0)),
                ("failed_calls", models.IntegerField(default=0)),
                ("last_called", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_webhooks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "webhook",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="WebhookLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("request_url", models.URLField()),
                ("request_method", models.CharField(max_length=10)),
                ("request_headers", models.JSONField(default=dict)),
                ("request_body", models.TextField(blank=True)),
                ("response_status", models.IntegerField(blank=True, null=True)),
                ("response_headers", models.JSONField(default=dict)),
                ("response_body", models.TextField(blank=True)),
                ("response_time_ms", models.IntegerField(blank=True, null=True)),
                ("success", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "webhook",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="integrations.webhook",
                    ),
                ),
            ],
            options={
                "db_table": "webhook_log",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("smtp", "SMTP"),
                            ("sendgrid", "SendGrid"),
                            ("mailgun", "Mailgun"),
                            ("ses", "Amazon SES"),
                            ("mandrill", "Mandrill"),
                            ("postmark", "Postmark"),
                            ("other", "Other"),
                        ],
                        default="smtp",
                        max_length=20,
                    ),
                ),
                ("smtp_host", models.CharField(blank=True, max_length=255)),
                ("smtp_port", models.IntegerField(blank=True, null=True)),
                ("smtp_username", models.CharField(blank=True, max_length=255)),
                ("smtp_password", models.CharField(blank=True, max_length=255)),
                ("smtp_use_tls", models.BooleanField(default=True)),
                ("smtp_use_ssl", models.BooleanField(default=False)),
                ("api_key", models.CharField(blank=True, max_length=500)),
                ("api_secret", models.CharField(blank=True, max_length=500)),
                ("api_endpoint", models.URLField(blank=True)),
                (
                    "from_email",
                    models.EmailField(help_text="Default from email", max_length=254),
                ),
                ("from_name", models.CharField(blank=True, max_length=255)),
                ("reply_to_email", models.EmailField(blank=True, max_length=254)),
                ("is_active", models.BooleanField(default=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("last_verified", models.DateTimeField(blank=True, null=True)),
                ("total_sent", models.IntegerField(default=0)),
                ("total_delivered", models.IntegerField(default=0)),
                ("total_bounced", models.IntegerField(default=0)),
                ("total_failed", models.IntegerField(default=0)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_email_integrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "email_integration",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DataSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sync_started", models.DateTimeField()),
                ("sync_completed", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.IntegerField(blank=True, null=True)),
                ("total_records", models.IntegerField(default=0)),
                ("synced_records", models.IntegerField(default=0)),
                ("failed_records", models.IntegerField(default=0)),
                ("skipped_records", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="running",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("error_details", models.JSONField(default=dict)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "data_sync",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="integrations.datasync",
                    ),
                ),
            ],
            options={
                "db_table": "data_sync_log",
                "ordering": ["-sync_started"],
            },
        ),
        migrations.CreateModel(
            name="CalendarIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("google", "Google Calendar"),
                            ("outlook", "Microsoft Outlook"),
                            ("exchange", "Microsoft Exchange"),
                            ("caldav", "CalDAV"),
                            ("other", "Other"),
                        ],
                        default="google",
                        max_length=20,
                    ),
                ),
                ("client_id", models.CharField(blank=True, max_length=255)),
                ("client_secret", models.CharField(blank=True, max_length=255)),
                ("access_token", models.TextField(blank=True)),
                ("refresh_token", models.TextField(blank=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("calendar_id", models.CharField(blank=True, max_length=255)),
                ("calendar_name", models.CharField(blank=True, max_length=255)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "sync_direction",
                    models.CharField(
                        choices=[
                            ("import", "Import Only"),
                            ("export", "Export Only"),
                            ("bidirectional", "Bidirectional"),
                        ],
                        default="bidirectional",
                        max_length=20,
                    ),
                ),
                (
                    "sync_frequency",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                        ],
                        default="hourly",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_connected", models.BooleanField(default=False)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.company",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_calendar_integrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "calendar_integration",
                "ordering": ["name"],
            },
        ),
    ]
